double distanceBetween(pair<double, double> lhs, pair<double, double> rhs) {
    double latDif = (lhs.first - rhs.first) * M_PI / 180.0;
    double longDif = (lhs.second - rhs.second) * M_PI / 180.0;
    double lhsLatRad = lhs.first * M_PI / 180.0;
    double rhsLatRad = rhs.first * M_PI / 180.0;
    double a = pow(sin(latDif / 2), 2) + cos(lhsLatRad) * cos(rhsLatRad) * pow(sin(longDif / 2), 2);
    double radius = 3961;
    double c = 2 * asin(sqrt(a));
    return radius * c;
}

tuple<double, double, double> coordinatesToCartesian(pair<double, double> coordinates) {
    double lat = coordinates.first * M_PI / 180.0;
    double lon = coordinates.second * M_PI / 180.0;
    double x = cos(lat) * cos(lon);
    double y = cos(lat) * sin(lon);
    double z = sin(lat);
    return tuple<double, double, double>(x, y, z);
}

pair<double, double> cartesianToCoordinates(tuple<double, double, double> cartesian) {
    double lon = atan2(get<1>(cartesian), get<0>(cartesian));
    double hyp = sqrt(get<0>(cartesian) * get<0>(cartesian) + get<1>(cartesian) * get<1>(cartesian));
    double lat = atan2(get<2>(cartesian), hyp);
    lat = lat * 180 / M_PI;
    lon = lon * 180 / M_PI;
    return pair<double, double>(lat, lon);
}

pair<double, double> verticesToCenter(vector<pair<double, double>> vertices) {
    double xTotal = 0;
    double yTotal = 0;
    double zTotal = 0;
    for (int i = 0; i < vertices.size(); i++) {
        tuple<double, double, double> xyzCoords = coordinatesToCartesian(vertices.at(i));
        xTotal += get<0>(xyzCoords);
        yTotal += get<1>(xyzCoords);
        zTotal += get<2>(xyzCoords);
    }
    xTotal = xTotal / vertices.size();
    yTotal = yTotal / vertices.size();
    zTotal = zTotal / vertices.size();
    return cartesianToCoordinates(tuple<double, double, double>(xTotal, yTotal, zTotal));
}

pair<pair<double, double>, double> verticesToMap(vector<pair<double, double>> vertices) {
    pair<double, double> center = verticesToCenter(vertices);
    double maxRadius = 0;
    for (int i = 0; i < vertices.size(); i++) {
        double distance = distanceBetween(center, vertices.at(i));
        if (i == 0 || distance > maxRadius) {
            maxRadius = distance;
        }
    }
    return pair<pair<double, double>, double>(center, maxRadius);
}
